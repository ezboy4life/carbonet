name: Build and Release APK

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      # Configurar o Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Checkout do código
      - name: Checkout
        uses: actions/checkout@v3

      # Instalar Flutter
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --branch stable --depth 1
          echo "${PWD}/flutter/bin" >> $GITHUB_PATH
          export PATH="${PWD}/flutter/bin:$PATH"
          flutter --version

      # Executar Flutter Doctor
      - name: Flutter Doctor
        run: flutter doctor

      # Instalar dependências
      - name: Install Dependencies
        run: flutter pub get

      # Build do APK
      - name: Build APK
        run: flutter build apk --release

      # Capturar a mensagem do commit e data/hora
      - name: Get Commit Message and Timestamp
        id: vars
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%s)
          TIMESTAMP=$(date -u +"%Y%m%d-%H%M%S")
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      # Criar release no GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: release-${{ env.TIMESTAMP }}-${{ github.ref_name }}
          release_name: "Build from: ${{ env.COMMIT_MESSAGE }} (${env.TIMESTAMP})"
          body: |
            Build gerado automaticamente para o commit:
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ env.COMMIT_MESSAGE }}
            - Timestamp: ${{ env.TIMESTAMP }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      # Fazer upload do APK na release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release-${{ env.TIMESTAMP }}.apk
          asset_content_type: application/vnd.android.package-archive
          token: ${{ secrets.GITHUB_TOKEN }}
